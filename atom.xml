<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zy4free.github.io</id>
    <title>白发个人博客</title>
    <updated>2020-06-12T15:24:01.887Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zy4free.github.io"/>
    <link rel="self" href="https://zy4free.github.io/atom.xml"/>
    <subtitle>一花一世界 一叶一菩提</subtitle>
    <logo>https://zy4free.github.io/images/avatar.png</logo>
    <icon>https://zy4free.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 白发个人博客</rights>
    <entry>
        <title type="html"><![CDATA[Oracle数据库客户端PLSQL Developer常用语句]]></title>
        <id>https://zy4free.github.io/post/oracle-shu-ju-ku-ke-hu-duan-plsql-developer-chang-yong-yu-ju/</id>
        <link href="https://zy4free.github.io/post/oracle-shu-ju-ku-ke-hu-duan-plsql-developer-chang-yong-yu-ju/">
        </link>
        <updated>2020-06-12T06:52:57.000Z</updated>
        <content type="html"><![CDATA[<p>在SQLPLUS下，实现中-英字符集转换<br>
alter session set nls_language='AMERICAN';<br>
alter session set nls_language='SIMPLIFIED CHINESE';<br>
主要知识点：<br>
一、有关表的操作<br>
1)建表<br>
create table test as select * from dept; --从已知表复制数据和结构<br>
create table test as select * from dept where 1=2; --从已知表复制结构但不包括数据<br>
2)插入数据：<br>
insert into test select * from dept;<br>
二、运算符<br>
算术运算符：+ - * / 可以在select 语句中使用<br>
连接运算符：|| select deptno|| dname from dept;<br>
比较运算符：&gt; &gt;= = != &lt; &lt;= like between is null in<br>
逻辑运算符：not and or<br>
集合运算符： intersect ，union， union all， minus<br>
要求：对应集合的列数和数据类型相同<br>
查询中不能包含long 列<br>
列的标签是第一个集合的标签<br>
使用order by时，必须使用位置序号，不能使用列名<br>
例：集合运算符的使用：<br>
intersect ，union， union all， minus<br>
select * from emp intersect select * from emp where deptno=10 ;<br>
select * from emp minus select * from emp where deptno=10;<br>
select * from emp where deptno=10 union select * from emp where deptno in (10,20); --不包括重复行<br>
select * from emp where deptno=10 union all select * from emp where deptno in (10,20); --包括重复行</p>
<p>三，常用 ORACLE 函数<br>
sysdate为系统日期 dual为虚表<br>
一）日期函数[重点掌握前四个日期函数]<br>
1,add_months[返回日期加(减)指定月份后(前)的日期]<br>
select sysdate S1,add_months(sysdate,10) S2,<br>
add_months(sysdate,5) S3 from dual;<br>
2,last_day [返回该月最后一天的日期]<br>
select last_day(sysdate) from dual;<br>
3,months_between[返回日期之间的月份数]<br>
select sysdate S1, months_between('1-4月-04',sysdate) S2,<br>
months_between('1-4月-04','1-2月-04') S3 from dual<br>
4,next_day(d,day): 返回下个星期的日期,day为1-7或星期日-星期六,1表示星期日<br>
select sysdate S1,next_day(sysdate,1) S2,<br>
next_day(sysdate,'星期日') S3 FROM DUAL<br>
5,round<a href="day:%E8%88%8D%E5%85%A5%E5%88%B0%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E6%98%9F%E6%9C%9F%E6%97%A5">舍入到最接近的日期</a><br>
select sysdate S1,<br>
round(sysdate) S2 ,<br>
round(sysdate,'year') YEAR,<br>
round(sysdate,'month') MONTH ,<br>
round(sysdate,'day') DAY from dual<br>
6,trunc[截断到最接近的日期]<br>
select sysdate S1,<br>
trunc(sysdate) S2,<br>
trunc(sysdate,'year') YEAR,<br>
trunc(sysdate,'month') MONTH ,<br>
trunc(sysdate,'day') DAY from dual<br>
7,返回日期列表中最晚日期<br>
select greatest('01-1月-04','04-1月-04','10-2月-04') from dual</p>
<p>二）字符函数(可用于字面字符或数据库列)<br>
1，字符串截取<br>
select substr('abcdef',1,3) from dual<br>
2,查找子串位置<br>
select instr('abcfdgfdhd','fd') from dual<br>
3,字符串连接<br>
select 'HELLO'||'hello world' from dual;<br>
4, 1)去掉字符串中的空格<br>
select ltrim(' abc') s1,<br>
rtrim('zhang ') s2,<br>
trim(' zhang ') s3 from dual<br>
2)去掉前导和后缀<br>
select trim(leading 9 from 9998767999) s1,<br>
trim(trailing 9 from 9998767999) s2,<br>
trim(9 from 9998767999) s3 from dual;<br>
5,返回字符串首字母的Ascii值<br>
select ascii('a') from dual<br>
6,返回ascii值对应的字母<br>
select chr(97) from dual<br>
7,计算字符串长度<br>
select length('abcdef') from dual<br>
8,initcap（首字母变大写） ,lower(变小写),upper(变大写)<br>
select lower('ABC') s1,<br>
upper('def') s2,<br>
initcap('efg') s3 from dual;<br>
9,Replace<br>
select replace('abc','b','xy') from dual;<br>
10,translate<br>
select translate('abc','b','xx') from dual; -- x是1位<br>
11,lpad [左添充] rpad <a href="%E7%94%A8%E4%BA%8E%E6%8E%A7%E5%88%B6%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F">右填充</a><br>
select lpad('func',15,'=') s1, rpad('func',15,'-') s2 from dual;<br>
select lpad(dname,14,'=') from dept;<br>
12, decode[实现if ..then 逻辑]<br>
select deptno,decode(deptno,10,'1',20,'2',30,'3','其他') from dept;<br>
三）数字函数<br>
1，取整函数（ceil 向上取整,floor 向下取整）<br>
select ceil(66.6) N1,floor(66.6) N2 from dual;<br>
2, 取幂(power) 和 求平方根(sqrt)<br>
select power(3,2) N1,sqrt(9) N2 from dual;<br>
3,求余<br>
select mod(9,5) from dual;<br>
4,返回固定小数位数 (round:四舍五入，trunc:直接截断)<br>
select round(66.667,2) N1,trunc(66.667,2) N2 from dual;<br>
5,返回值的符号(正数返回为1,负数为-1)<br>
select sign(-32),sign(293) from dual;</p>
<p>四）转换函数<br>
1，to_char()[将日期和数字类型转换成字符类型]</p>
<ol>
<li>select to_char(sysdate) s1,<br>
to_char(sysdate,'yyyy-mm-dd') s2,<br>
to_char(sysdate,'yyyy') s3,<br>
to_char(sysdate,'yyyy-mm-dd hh12:mi:ss') s4,<br>
to_char(sysdate, 'hh24:mi:ss') s5,<br>
to_char(sysdate,'DAY') s6 from dual;</li>
<li>select sal,to_char(sal,'＄99999') n1,to_char(sal,'＄99,999') n2 from emp<br>
2, to_date()[将字符类型转换为日期类型]<br>
insert into emp(empno,hiredate) values(8000,to_date('2004-10-10','yyyy-mm-dd'));<br>
3, to_number() 转换为数字类型<br>
select to_number(to_char(sysdate,'hh12')) from dual; //以数字显示的小时数<br>
五）其他函数<br>
user:<br>
返回登录的用户名称<br>
select user from dual;<br>
vsize:<br>
返回表达式所需的字节数<br>
select vsize('HELLO') from dual;<br>
nvl(ex1,ex2): 　<br>
ex1值为空则返回ex2,否则返回该值本身ex1（常用）<br>
例：如果雇员没有佣金，将显示0，否则显示佣金<br>
select comm,nvl(comm,0) from emp;<br>
nullif(ex1,ex2):<br>
值相等返空，否则返回第一个值<br>
例：如果工资和佣金相等，则显示空，否则显示工资<br>
select nullif(sal,comm),sal,comm from emp;<br>
coalesce: 　<br>
返回列表中第一个非空表达式<br>
select comm,sal,coalesce(comm,sal,sal*10) from emp;<br>
　　　nvl2(ex1,ex2,ex3) :<br>
如果ex1不为空，显示ex2,否则显示ex3<br>
如：查看有佣金的雇员姓名以及他们的佣金<br>
　　 　 select nvl2(comm,ename,') as HaveCommName,comm from emp;<br>
六）分组函数<br>
max min avg count sum<br>
1，整个结果集是一个组</li>
<li>求部门30 的最高工资，最低工资,平均工资，总人数，有工作的人数，工种数量及工资总和<br>
select max(ename),max(sal),<br>
min(ename),min(sal),<br>
avg(sal),<br>
count(<em>) ,count(job),count(distinct(job)) ,<br>
sum(sal) from emp where deptno=30;<br>
2, 带group by 和 having 的分组<br>
1)按部门分组求最高工资，最低工资，总人数，有工作的人数，工种数量及工资总和<br>
select deptno, max(ename),max(sal),<br>
min(ename),min(sal),<br>
avg(sal),<br>
count(</em>) ,count(job),count(distinct(job)) ,<br>
sum(sal) from emp group by deptno;<br>
2)部门30的最高工资，最低工资，总人数，有工作的人数，工种数量及工资总和<br>
select deptno, max(ename),max(sal),<br>
min(ename),min(sal),<br>
avg(sal),<br>
count(*) ,count(job),count(distinct(job)) ,<br>
sum(sal) from emp group by deptno having deptno=30;<br>
3, stddev 返回一组值的标准偏差<br>
select deptno,stddev(sal) from emp group by deptno;<br>
variance 返回一组值的方差差<br>
select deptno,variance(sal) from emp group by deptno;<br>
4, 带有rollup和cube操作符的Group By<br>
rollup 按分组的第一个列进行统计和最后的小计<br>
cube 按分组的所有列的进行统计和最后的小计<br>
select deptno,job ,sum(sal) from emp group by deptno,job;<br>
select deptno,job ,sum(sal) from emp group by rollup(deptno,job);<br>
cube 产生组内所有列的统计和最后的小计<br>
select deptno,job ,sum(sal) from emp group by cube(deptno,job);</li>
</ol>
<p>七、临时表<br>
只在会话期间或在事务处理期间存在的表.<br>
临时表在插入数据时，动态分配空间<br>
create global temporary table temp_dept<br>
(dno number,<br>
dname varchar2(10))<br>
on commit delete rows;<br>
insert into temp_dept values(10,'ABC');<br>
commit;<br>
select * from temp_dept; --无数据显示,数据自动清除<br>
on commit preserve rows:在会话期间表一直可以存在（保留数据）<br>
on commit delete rows:事务结束清除数据（在事务结束时自动删除表的数据）</p>
]]></content>
    </entry>
</feed>